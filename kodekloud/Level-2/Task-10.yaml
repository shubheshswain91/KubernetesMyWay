# Last week, the Nautilus DevOps team deployed a redis app on Kubernetes cluster, which was working fine so far. 
# This morning one of the team members was making some changes in this existing setup, but he made some mistakes and the app went down. 
# We need to fix this as soon as possible. Please take a look.



# The deployment name is redis-deployment. The pods are not in running state right now, so please look into the issue and fix the same.

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"app":"redis"},"name":"redis-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"redis"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"redis"}},"spec":{"containers":[{"image":"redis:alpin","name":"redis-container","ports":[{"containerPort":6379}],"resources":{"requests":{"cpu":"0.3"}},"volumeMounts":[{"mountPath":"/redis-master-data","name":"data"},{"mountPath":"/redis-master","name":"config"}]}],"volumes":[{"emptyDir":{},"name":"data"},{"configMap":{"name":"redis-conig"},"name":"config"}]}}}}
  creationTimestamp: "2024-05-10T19:16:19Z"
  generation: 3
  labels:
    app: redis
  name: redis-deployment
  namespace: default
  resourceVersion: "3646"
  uid: f2308a98-2042-47ce-a90d-5f0f0f760608
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:alpine
        imagePullPolicy: IfNotPresent
        name: redis-container
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          requests:
            cpu: 300m
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
        - mountPath: /redis-master
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          defaultMode: 420
          name: redis-config
        name: config